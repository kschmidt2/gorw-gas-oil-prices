let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:","}}),document.addEventListener("DOMContentLoaded",function(){Highcharts.chart("chart-container",{chart:{type:"line",styledMode:!0,spacingBottom:25,spacingRight:100},title:{text:null},data:{googleSpreadsheetKey:"1-p2jXiiozwOOlTTzTCFBQSu6L7g9bOqWJuvTCrLKG-o"},plotOptions:{series:{lineWidth:1,marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{fillColor:"#ffffff"}}}}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"},format:"{value:%b. %e}"},tickLength:5,tickInterval:6048e5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow",format:"{value:.2f}"},min:2.55,max:2.65,tickAmount:6},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},annotations:[{labels:[{point:{x:15679008e5,y:2.5623,xAxis:0,yAxis:0},text:"Attacks in <br> Saudi Arabia",y:-30,shape:"connector",x:15}],shapes:[{point:{x:15679008e5,y:2.5623,xAxis:0,yAxis:0},type:"circle",r:5}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1},xAxis:{labels:{format:"{value:%m/%d}"}}}}]}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic3ViaGVhZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImhlYWRsaW5lIiwiZ2V0RWxlbWVudEJ5SWQiLCJpIiwibGVuZ3RoIiwic3R5bGUiLCJmb250V2VpZ2h0IiwiSGlnaGNoYXJ0cyIsInNldE9wdGlvbnMiLCJsYW5nIiwidGhvdXNhbmRzU2VwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoYXJ0IiwidHlwZSIsInN0eWxlZE1vZGUiLCJzcGFjaW5nQm90dG9tIiwic3BhY2luZ1JpZ2h0IiwidGl0bGUiLCJ0ZXh0IiwiZGF0YSIsImdvb2dsZVNwcmVhZHNoZWV0S2V5IiwicGxvdE9wdGlvbnMiLCJzZXJpZXMiLCJsaW5lV2lkdGgiLCJtYXJrZXIiLCJlbmFibGVkIiwic3ltYm9sIiwiZmlsbENvbG9yIiwic3RhdGVzIiwiaG92ZXIiLCJsZWdlbmQiLCJ4QXhpcyIsImxhYmVscyIsIndoaXRlU3BhY2UiLCJmb3JtYXQiLCJ0aWNrTGVuZ3RoIiwidGlja0ludGVydmFsIiwieUF4aXMiLCJ1c2VIVE1MIiwib3ZlcmZsb3ciLCJtaW4iLCJtYXgiLCJ0aWNrQW1vdW50IiwiY3JlZGl0cyIsInRvb2x0aXAiLCJzaGFkb3ciLCJwYWRkaW5nIiwiYW5ub3RhdGlvbnMiLCJwb2ludCIsIngiLCJ5Iiwic2hhcGUiLCJzaGFwZXMiLCJyIiwicmVzcG9uc2l2ZSIsInJ1bGVzIiwiY29uZGl0aW9uIiwibWF4V2lkdGgiLCJjaGFydE9wdGlvbnMiLCJhbGlnbiJdLCJtYXBwaW5ncyI6IkFBUUEsSUFBQUEsUUFBQUMsU0FBQUMsdUJBQUEsaUJBQ0FDLFNBQUFGLFNBQUFHLGVBQUEsY0FDQSxJQUFBRCxTQUNBLElBQUEsSUFBQUUsRUFBQSxFQUFBQSxFQUFBTCxRQUFBTSxPQUFBRCxJQUNBTCxRQUFBSyxHQUFBRSxNQUFBQyxXQUFBLE1BSUFDLFdBQUFDLFdBQUEsQ0FDQUMsS0FBQSxDQUNBQyxhQUFBLE9BSUFYLFNBQUFZLGlCQUFBLG1CQUFBLFdBQ0FKLFdBQUFLLE1BQUEsa0JBQUEsQ0FDQUEsTUFBQSxDQUNBQyxLQUFBLE9BQ0FDLFlBQUEsRUFDQUMsY0FBQSxHQUNBQyxhQUFBLEtBRUFDLE1BQUEsQ0FDQUMsS0FBQSxNQUVBQyxLQUFBLENBQ0FDLHFCQUFBLGdEQUVBQyxZQUFBLENBQ0FDLE9BQUEsQ0FDQUMsVUFBQSxFQUVBQyxPQUFBLENBQ0FDLFNBQUEsRUFDQUMsT0FBQSxTQUNBQyxVQUFBLFVBQ0FDLE9BQUEsQ0FDQUMsTUFBQSxDQUNBRixVQUFBLGVBTUFHLE9BQUEsQ0FDQUwsU0FBQSxHQUVBTSxNQUFBLENBQ0FDLE9BQUEsQ0FDQTNCLE1BQUEsQ0FDQTRCLFdBQUEsVUFFQUMsT0FBQSxrQkFFQUMsV0FBQSxFQUNBQyxhQUFBLFFBRUFDLE1BQUEsQ0FDQXBCLE9BQUEsRUFDQWUsT0FBQSxDQUNBTSxTQUFBLEVBQ0FDLFNBQUEsUUFDQUwsT0FBQSxlQUVBTSxJQUFBLEtBQ0FDLElBQUEsS0FDQUMsV0FBQSxHQUVBQyxRQUFBLENBQ0FsQixTQUFBLEdBRUFtQixRQUFBLENBQ0FDLFFBQUEsRUFDQUMsUUFBQSxJQUVBQyxZQUFBLENBQUEsQ0FDQWYsT0FBQSxDQUFBLENBQ0FnQixNQUFBLENBQ0FDLEVBQUEsV0FDQUMsRUFBQSxPQUNBbkIsTUFBQSxFQUNBTSxNQUFBLEdBRUFuQixLQUFBLCtCQUNBZ0MsR0FBQSxHQUNBQyxNQUFBLFlBQ0FGLEVBQUEsS0FFQUcsT0FBQSxDQUFBLENBQ0FKLE1BQUEsQ0FDQUMsRUFBQSxXQUNBQyxFQUFBLE9BQ0FuQixNQUFBLEVBQ0FNLE1BQUEsR0FFQXhCLEtBQUEsU0FDQXdDLEVBQUEsTUFHQUMsV0FBQSxDQUNBQyxNQUFBLENBQUEsQ0FDQUMsVUFBQSxDQUNBQyxTQUFBLEtBRUFDLGFBQUEsQ0FDQTlDLE1BQUEsQ0FDQUksYUFBQSxJQUVBYyxPQUFBLENBQ0E2QixNQUFBLE9BQ0FWLEdBQUEsSUFFQUwsUUFBQSxDQUNBbkIsU0FBQSxHQUVBTSxNQUFBLENBQ0FDLE9BQUEsQ0FDQUUsT0FBQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYWRkcyBzb2NpYWwgY2xhc3MgdG8gZ2V0IHNvY2lhbCBjaGFydFxuLy8gbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2hhcnQtYXJlYVwiKTtcbi8vIGZvcih2YXIgaSA9IDA7IGkgPCBlbGVtZW50Lmxlbmd0aDsgaSsrKVxuLy8ge1xuLy8gICAgIGVsZW1lbnRbaV0uY2xhc3NOYW1lICs9IFwiIHNvY2lhbFwiO1xuLy8gfVxuXG4vLyBib2xkcyB0aGUgc3ViaGVhZCBpZiB0aGVyZSBpcyBubyBoZWFkbGluZVxubGV0IHN1YmhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2hhcnQtc3ViaGVhZFwiKSxcbiAgICBoZWFkbGluZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhcnQtaGVhZFwiKTtcbiAgICBpZiAoIWhlYWRsaW5lKSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzdWJoZWFkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBzdWJoZWFkW2ldLnN0eWxlLmZvbnRXZWlnaHQgPSBcIjYwMFwiO1xuICAgICAgICB9ICAgICAgIFxuICAgICB9XG5cbkhpZ2hjaGFydHMuc2V0T3B0aW9ucyh7XG4gICAgbGFuZzoge1xuICAgICAgdGhvdXNhbmRzU2VwOiAnLCdcbiAgICB9XG59KTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBteUNoYXJ0ID0gSGlnaGNoYXJ0cy5jaGFydCgnY2hhcnQtY29udGFpbmVyJywge1xuICAgICAgICBjaGFydDoge1xuICAgICAgICAgICAgdHlwZTogJ2xpbmUnLFxuICAgICAgICAgICAgc3R5bGVkTW9kZTogdHJ1ZSxcbiAgICAgICAgICAgIHNwYWNpbmdCb3R0b206IDI1LFxuICAgICAgICAgICAgc3BhY2luZ1JpZ2h0OiAxMDBcbiAgICAgICAgfSwgXG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICB0ZXh0OiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGdvb2dsZVNwcmVhZHNoZWV0S2V5OiAnMS1wMmpYaWlvendPT2xUVHpUQ0ZCUVN1Nkw3ZzliT3FXSnV2VENyTEtHLW8nXG4gICAgICAgIH0sXG4gICAgICAgIHBsb3RPcHRpb25zOiB7XG4gICAgICAgICAgICBzZXJpZXM6IHtcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDEsXG4gICAgICAgICAgICAgICAgLy8gY2xpcDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWFya2VyOiB7XG4gICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzeW1ib2w6ICdjaXJjbGUnLFxuICAgICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgICAgICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBob3Zlcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxDb2xvcjogJyNmZmZmZmYnXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgeEF4aXM6IHtcbiAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmb3JtYXQ6ICd7dmFsdWU6JWIuICVlfSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrTGVuZ3RoOiA1LFxuICAgICAgICAgICAgdGlja0ludGVydmFsOiA3ICogMjQgKiAzNjAwICogMTAwMFxuICAgICAgICB9LFxuICAgICAgICB5QXhpczoge1xuICAgICAgICAgICAgdGl0bGU6IGZhbHNlLFxuICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgdXNlSFRNTDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2FsbG93JyxcbiAgICAgICAgICAgICAgICBmb3JtYXQ6ICd7dmFsdWU6LjJmfSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtaW46IDIuNTUsXG4gICAgICAgICAgICBtYXg6IDIuNjUsXG4gICAgICAgICAgICB0aWNrQW1vdW50OiA2XG4gICAgICAgIH0sXG4gICAgICAgIGNyZWRpdHM6IHtcbiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXA6IHtcbiAgICAgICAgICAgIHNoYWRvdzogZmFsc2UsXG4gICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgfSxcbiAgICAgICAgYW5ub3RhdGlvbnM6IFt7XG4gICAgICAgICAgICBsYWJlbHM6IFt7XG4gICAgICAgICAgICAgICAgcG9pbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgeDogMTU2NzkwMDgwMDAwMCwgLy8gdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgIHk6IDIuNTYyMywgLy8gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgeEF4aXM6IDAsIC8vIHlBeGlzIElOREVYXG4gICAgICAgICAgICAgICAgICAgIHlBeGlzOiAwIC8vIHhBeGlzIElOREVYXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0ZXh0OiAnQXR0YWNrcyBpbiA8YnI+IFNhdWRpIEFyYWJpYScsXG4gICAgICAgICAgICAgICAgeTogLTMwLFxuICAgICAgICAgICAgICAgIHNoYXBlOiAnY29ubmVjdG9yJyxcbiAgICAgICAgICAgICAgICB4OiAxNSAgIFxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgICBzaGFwZXM6IFt7XG4gICAgICAgICAgICAgICAgcG9pbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgeDogMTU2NzkwMDgwMDAwMCwgLy8gdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgIHk6IDIuNTYyMywgLy8gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgeEF4aXM6IDAsIC8vIHlBeGlzIElOREVYXG4gICAgICAgICAgICAgICAgICAgIHlBeGlzOiAwIC8vIHhBeGlzIElOREVYXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6ICdjaXJjbGUnLFxuICAgICAgICAgICAgICAgIHI6IDVcbiAgICAgICAgICAgIH1dLFxuICAgICAgICB9XSxcbiAgICAgICAgcmVzcG9uc2l2ZToge1xuICAgICAgICAgICAgcnVsZXM6IFt7XG4gICAgICAgICAgICAgIGNvbmRpdGlvbjoge1xuICAgICAgICAgICAgICAgIG1heFdpZHRoOiA1MDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2hhcnRPcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgY2hhcnQ6IHtcbiAgICAgICAgICAgICAgICAgIHNwYWNpbmdSaWdodDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLFxuICAgICAgICAgICAgICAgICAgICB4OiAtMThcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRvb2x0aXA6IHtcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHhBeGlzOiB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiAne3ZhbHVlOiVtLyVkfSdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICB9KTtcbn0pOyJdfQ==
