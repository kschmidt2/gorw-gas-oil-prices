let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:","}}),document.addEventListener("DOMContentLoaded",function(){Highcharts.chart("chart-container",{chart:{type:"line",styledMode:!0,spacingBottom:25,spacingRight:100},title:{text:null},data:{googleSpreadsheetKey:"1Hud66_g57ih4UP07Nis_t7MbPUg0_VSNRC8bUGNz3eY"},plotOptions:{series:{lineWidth:1,marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{fillColor:"#ffffff"}}}}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:10,itemMarginTop:-10},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},tickAmount:4},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,valueDecimals:1,valueSuffix:"%"},annotations:[{labels:[{point:{x:15678144e5,y:-9.857323587,xAxis:0,yAxis:0},text:"Attacks in <br> Saudi Arabia",y:-30,shape:"connector",x:0}],shapes:[{point:{x:15678144e5,y:-9.857323587,xAxis:0,yAxis:0},type:"circle",r:5},{point:{x:15678144e5,y:-20.79487179,xAxis:0,yAxis:0},type:"circle",r:5}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18,itemDistance:12},tooltip:{enabled:!1}}}]}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
